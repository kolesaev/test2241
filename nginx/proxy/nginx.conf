worker_processes  1;
pid /tmp/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    map $upstream_response_time $temprt {
        default $upstream_response_time;
        ""      0;
    }

    log_format upstreaminfo escape=json
        '{"timestamp": "$time_iso8601", '
        '"forwarded_for": "$proxy_add_x_forwarded_for", '
        '"request_method": "$request_method", '
        '"request_url": "$scheme://$host$request_uri", '
        '"status": $status, '
        '"user_agent": "$http_user_agent", '
        '"body_bytes_sent": "$body_bytes_sent", '
        '"request_size": "$request_length", '
        '"response_size": "$upstream_response_length", '
        '"response_time": "$temprt s", '
        '"request_id": "$request_id", '
        '"referer": "$http_referer", '
        '"protocol": "$server_protocol"}';

    # https://github.com/linuxserver/docker-letsencrypt/issues/67#issuecomment-382715473
    client_body_temp_path /tmp/nginx 1 2;
    proxy_temp_path /tmp/nginx-proxy;
    fastcgi_temp_path /tmp/nginx-fastcgi;
    uwsgi_temp_path /tmp/nginx-uwsgi;
    scgi_temp_path /tmp/nginx-scgi;

    access_log /var/log/nginx/access.log upstreaminfo;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    reset_timedout_connection on;

    keepalive_timeout 75s;

    gzip on;
    gzip_types application/javascript text/javascript image/svg+xml text/css;
    server_tokens off;

    server_names_hash_bucket_size 64;
    types_hash_max_size 2048;
    types_hash_bucket_size 64;
    client_max_body_size 100m;

    upstream web {
        server nginx_web_1:8080;
        server nginx_web_2:8080;
    }

    server {

        listen       8080;
        server_name  _;

        location / {

            proxy_pass http://web;

        }
        
    }

}
